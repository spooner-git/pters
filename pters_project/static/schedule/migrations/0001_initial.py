# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2018-03-29 10:12
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassLectureTb',
            fields=[
                ('class_lecture_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('auth_cd', models.CharField(blank=True, db_column='AUTH_CD', max_length=20, null=True)),
                ('mod_member_id', models.CharField(blank=True, db_column='MOD_MEMBER_ID', max_length=20, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'CLASS_LECTURE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassTb',
            fields=[
                ('class_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('subject_cd', models.CharField(blank=True, db_column='SUBJECT_CD', max_length=10, null=True)),
                ('subject_detail_nm', models.CharField(blank=True, db_column='SUBJECT_DETAIL_NM', max_length=20, null=True)),
                ('start_date', models.DateField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.DateField(blank=True, db_column='END_DATE', null=True)),
                ('class_hour', models.FloatField(blank=True, db_column='CLASS_HOUR', null=True)),
                ('start_hour_unit', models.FloatField(blank=True, db_column='START_HOUR_UNIT', null=True)),
                ('class_member_num', models.IntegerField(blank=True, db_column='CLASS_MEMBER_NUM', null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('member_view_state_cd', models.CharField(blank=True, db_column='MEMBER_VIEW_STATE_CD', default='WAIT', max_length=20, null=True)),
                ('schedule_check', models.IntegerField(blank=True, db_column='SCHEDULE_CHECK', null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'CLASS_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyTb',
            fields=[
                ('company_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=20, null=True)),
                ('phone', models.CharField(blank=True, db_column='PHONE', max_length=20, null=True)),
                ('address', models.CharField(blank=True, db_column='ADDRESS', max_length=100, null=True)),
                ('info', models.CharField(blank=True, db_column='INFO', max_length=255, null=True)),
                ('img_url', models.CharField(blank=True, db_column='IMG_URL', max_length=255, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'COMPANY_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeleteRepeatScheduleTb',
            fields=[
                ('delete_repeat_schedule_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('repeat_schedule_id', models.IntegerField(db_column='REPEAT_SCHEDULE_ID')),
                ('repeat_type_cd', models.CharField(blank=True, db_column='REPEAT_TYPE_CD', max_length=10, null=True)),
                ('week_info', models.CharField(blank=True, db_column='WEEK_INFO', max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.DateField(blank=True, db_column='END_DATE', null=True)),
                ('start_time', models.CharField(blank=True, db_column='START_TIME', max_length=20, null=True)),
                ('time_duration', models.CharField(blank=True, db_column='TIME_DURATION', max_length=20, null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('en_dis_type', models.CharField(blank=True, db_column='EN_DIS_TYPE', max_length=10, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'DELETE_REPEAT_SCHEDULE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeleteScheduleTb',
            fields=[
                ('delete_schedule_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('schedule_id', models.IntegerField(db_column='SCHEDULE_ID')),
                ('delete_repeat_schedule_tb', models.IntegerField(blank=True, db_column='DELETE_REPEAT_SCHEDULE_TB_ID', null=True)),
                ('start_dt', models.DateTimeField(blank=True, db_column='START_DT', null=True)),
                ('end_dt', models.DateTimeField(blank=True, db_column='END_DT', null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('sign_data_url', models.CharField(blank=True, db_column='SIGN_DATA_URL', max_length=255, null=True)),
                ('note', models.CharField(blank=True, db_column='NOTE', max_length=255, null=True)),
                ('en_dis_type', models.CharField(blank=True, db_column='EN_DIS_TYPE', max_length=10, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'DELETE_SCHEDULE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectureTb',
            fields=[
                ('lecture_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('lecture_reg_count', models.IntegerField(db_column='LECTURE_REG_COUNT', default=0)),
                ('lecture_rem_count', models.IntegerField(db_column='LECTURE_REM_COUNT', default=0)),
                ('lecture_avail_count', models.IntegerField(db_column='LECTURE_AVAIL_COUNT', default=0)),
                ('day_count', models.IntegerField(blank=True, db_column='DAY_COUNT', null=True)),
                ('start_date', models.DateField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.DateField(blank=True, db_column='END_DATE', null=True)),
                ('price', models.IntegerField(blank=True, db_column='PRICE', default=0, null=True)),
                ('refund_price', models.IntegerField(blank=True, db_column='REFUND_PRICE', default=0, null=True)),
                ('option_cd', models.CharField(blank=True, db_column='OPTION_CD', max_length=10, null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('member_view_state_cd', models.CharField(blank=True, db_column='MEMBER_VIEW_STATE_CD', default='WAIT', max_length=20, null=True)),
                ('schedule_check', models.IntegerField(blank=True, db_column='SCHEDULE_CHECK', default=0, null=True)),
                ('note', models.CharField(blank=True, db_column='NOTE', default='', max_length=255, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'LECTURE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MemberClassTb',
            fields=[
                ('member_class_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('auth_cd', models.CharField(blank=True, db_column='AUTH_CD', max_length=20, null=True)),
                ('mod_member_id', models.CharField(blank=True, db_column='MOD_MEMBER_ID', max_length=20, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'MEMBER_CLASS_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MemberLectureTb',
            fields=[
                ('member_lecture_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('auth_cd', models.CharField(blank=True, db_column='AUTH_CD', max_length=20, null=True)),
                ('mod_member_id', models.CharField(blank=True, db_column='MOD_MEMBER_ID', max_length=20, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'MEMBER_LECTURE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RepeatScheduleTb',
            fields=[
                ('repeat_schedule_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('repeat_type_cd', models.CharField(blank=True, db_column='REPEAT_TYPE_CD', max_length=10, null=True)),
                ('week_info', models.CharField(blank=True, db_column='WEEK_INFO', max_length=100, null=True)),
                ('start_date', models.DateField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.DateField(blank=True, db_column='END_DATE', null=True)),
                ('start_time', models.CharField(blank=True, db_column='START_TIME', max_length=20, null=True)),
                ('time_duration', models.CharField(blank=True, db_column='TIME_DURATION', max_length=20, null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('en_dis_type', models.CharField(blank=True, db_column='EN_DIS_TYPE', max_length=10, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
            ],
            options={
                'db_table': 'REPEAT_SCHEDULE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ScheduleTb',
            fields=[
                ('schedule_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('start_dt', models.DateTimeField(blank=True, db_column='START_DT', null=True)),
                ('end_dt', models.DateTimeField(blank=True, db_column='END_DT', null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('sign_data_url', models.CharField(blank=True, db_column='SIGN_DATA_URL', max_length=255, null=True)),
                ('max_mem_count', models.IntegerField(blank=True, db_column='MAX_MEM_COUNT', default=1, null=True)),
                ('note', models.CharField(blank=True, db_column='NOTE', max_length=255, null=True)),
                ('en_dis_type', models.CharField(blank=True, db_column='EN_DIS_TYPE', max_length=10, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', default=1, null=True)),
            ],
            options={
                'db_table': 'SCHEDULE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SettingTb',
            fields=[
                ('setting_id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('setting_type_cd', models.CharField(db_column='SETTING_TYPE_CD', max_length=10)),
                ('setting_info', models.CharField(blank=True, db_column='SETTING_INFO', max_length=255, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'SETTING_TB',
                'managed': False,
            },
        ),
    ]
