# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-08-23 10:05
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassRepeatScheduleTb',
            fields=[
                ('class_repeat_schedule_id', models.CharField(db_column='CLASS_REPEAT_SCHEDULE_ID', max_length=20, primary_key=True, serialize=False)),
                ('en_dis_type_cd', models.CharField(blank=True, db_column='EN_DIS_TYPE_CD', max_length=10, null=True)),
                ('repeat_type_cd', models.CharField(blank=True, db_column='REPEAT_TYPE_CD', max_length=10, null=True)),
                ('week_cd', models.CharField(blank=True, db_column='WEEK_CD', max_length=10, null=True)),
                ('start_date', models.DateField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.DateField(blank=True, db_column='END_DATE', null=True)),
                ('start_time', models.TimeField(blank=True, db_column='START_TIME', null=True)),
                ('end_time', models.TimeField(blank=True, db_column='END_TIME', null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'CLASS_REPEAT_SCHEDULE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassScheduleTb',
            fields=[
                ('class_schedule_id', models.CharField(db_column='CLASS_SCHEDULE_ID', max_length=20, primary_key=True, serialize=False)),
                ('en_dis_type_cd', models.CharField(blank=True, db_column='EN_DIS_TYPE_CD', max_length=10, null=True)),
                ('start_dt', models.DateTimeField(blank=True, db_column='START_DT', null=True)),
                ('end_dt', models.DateTimeField(blank=True, db_column='END_DT', null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'CLASS_SCHEDULE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClassTb',
            fields=[
                ('class_id', models.CharField(db_column='CLASS_ID', max_length=20, primary_key=True, serialize=False)),
                ('class_type_cd', models.CharField(blank=True, db_column='CLASS_TYPE_CD', max_length=10, null=True)),
                ('subject_cd', models.CharField(blank=True, db_column='SUBJECT_CD', max_length=10, null=True)),
                ('start_date', models.DateField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.DateField(blank=True, db_column='END_DATE', null=True)),
                ('class_hour', models.FloatField(blank=True, db_column='CLASS_HOUR', null=True)),
                ('start_hour_unit', models.FloatField(blank=True, db_column='START_HOUR_UNIT', null=True)),
                ('class_member_num', models.IntegerField(blank=True, db_column='CLASS_MEMBER_NUM', null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'CLASS_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CommonCdTb',
            fields=[
                ('group_cd', models.CharField(blank=True, db_column='GROUP_CD', max_length=10, null=True)),
                ('common_cd', models.CharField(db_column='COMMON_CD', max_length=10, primary_key=True, serialize=False)),
                ('common_cd_nm', models.CharField(blank=True, db_column='COMMON_CD_NM', max_length=20, null=True)),
                ('group_cd_nm', models.CharField(blank=True, db_column='GROUP_CD_NM', max_length=20, null=True)),
                ('upper_common_cd', models.CharField(blank=True, db_column='UPPER_COMMON_CD', max_length=10, null=True)),
                ('upper_group_cd', models.CharField(blank=True, db_column='UPPER_GROUP_CD', max_length=10, null=True)),
                ('attribute1', models.CharField(blank=True, db_column='ATTRIBUTE1', max_length=255, null=True)),
                ('order', models.IntegerField(blank=True, db_column='ORDER', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'COMMON_CD_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CompanyTb',
            fields=[
                ('company_id', models.CharField(db_column='COMPANY_ID', max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=20, null=True)),
                ('phone', models.CharField(blank=True, db_column='PHONE', max_length=20, null=True)),
                ('address', models.CharField(blank=True, db_column='ADDRESS', max_length=100, null=True)),
                ('info', models.CharField(blank=True, db_column='INFO', max_length=255, null=True)),
                ('img_url', models.CharField(blank=True, db_column='IMG_URL', max_length=255, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'COMPANY_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectureScheduleTb',
            fields=[
                ('lecture_schedule_id', models.CharField(db_column='LECTURE_SCHEDULE_ID', max_length=20, primary_key=True, serialize=False)),
                ('en_dis_type_cd', models.CharField(blank=True, db_column='EN_DIS_TYPE_CD', max_length=10, null=True)),
                ('start_dt', models.DateTimeField(blank=True, db_column='START_DT', null=True)),
                ('end_dt', models.DateTimeField(blank=True, db_column='END_DT', null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('sign_data_url', models.CharField(blank=True, db_column='SIGN_DATA_URL', max_length=255, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'LECTURE_SCHEDULE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LectureTb',
            fields=[
                ('lecture_id', models.CharField(db_column='LECTURE_ID', max_length=20, primary_key=True, serialize=False)),
                ('lecture_count', models.IntegerField(blank=True, db_column='LECTURE_COUNT', null=True)),
                ('day_count', models.IntegerField(blank=True, db_column='DAY_COUNT', null=True)),
                ('start_date', models.DateField(blank=True, db_column='START_DATE', null=True)),
                ('end_date', models.DateField(blank=True, db_column='END_DATE', null=True)),
                ('price', models.IntegerField(blank=True, db_column='PRICE', null=True)),
                ('option_cd', models.CharField(blank=True, db_column='OPTION_CD', max_length=10, null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'LECTURE_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LogTb',
            fields=[
                ('log_id', models.CharField(db_column='LOG_ID', max_length=20, primary_key=True, serialize=False)),
                ('external_id', models.CharField(blank=True, db_column='EXTERNAL_ID', max_length=20, null=True)),
                ('log_type', models.CharField(blank=True, db_column='LOG_TYPE', max_length=10, null=True)),
                ('contents', models.CharField(blank=True, db_column='CONTENTS', max_length=255, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'LOG_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MemberTb',
            fields=[
                ('member_id', models.CharField(db_column='MEMBER_ID', max_length=20, primary_key=True, serialize=False)),
                ('member_type_cd', models.CharField(blank=True, db_column='MEMBER_TYPE_CD', max_length=10, null=True)),
                ('author_cd', models.CharField(blank=True, db_column='AUTHOR_CD', max_length=10, null=True)),
                ('id', models.CharField(blank=True, db_column='ID', max_length=20, null=True)),
                ('pw', models.CharField(blank=True, db_column='PW', max_length=20, null=True)),
                ('name', models.CharField(blank=True, db_column='NAME', max_length=20, null=True)),
                ('phone', models.CharField(blank=True, db_column='PHONE', max_length=20, null=True)),
                ('age', models.IntegerField(blank=True, db_column='AGE', null=True)),
                ('sex', models.CharField(blank=True, db_column='SEX', max_length=2, null=True)),
                ('address', models.CharField(blank=True, db_column='ADDRESS', max_length=255, null=True)),
                ('job', models.CharField(blank=True, db_column='JOB', max_length=20, null=True)),
                ('contents', models.CharField(blank=True, db_column='CONTENTS', max_length=255, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'MEMBER_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SettingTb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('setting_type_cd', models.CharField(db_column='SETTING_TYPE_CD', max_length=10)),
                ('setting_cd', models.CharField(blank=True, db_column='SETTING_CD', max_length=10, null=True)),
                ('state_cd', models.CharField(blank=True, db_column='STATE_CD', max_length=10, null=True)),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'SETTING_TB',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ShopEmployeeTb',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_dt', models.DateTimeField(blank=True, db_column='REG_DT', null=True)),
                ('mod_dt', models.DateTimeField(blank=True, db_column='MOD_DT', null=True)),
                ('use', models.IntegerField(blank=True, db_column='USE', null=True)),
            ],
            options={
                'db_table': 'SHOP_EMPLOYEE_TB',
                'managed': False,
            },
        ),
    ]
